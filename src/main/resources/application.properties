spring.datasource.url=jdbc:postgresql://localhost:5432/farter
spring.datasource.username=postgres
spring.datasource.password=apple
#spring.datasource.driverClassName=org.postgresql.Driver
# генерация СТРУКТУРЫ БД через аннотации JPA ( HIBERNATE входит в JPA либу )
spring.jpa.generate-ddl=false

# для просмотра какой скрипт генерирует SQL
spring.jpa.show-sql=false

spring.jpa.hibernate.ddl-auto=validate 
# режим для генерации БД- при старте генерируется новая ПУСТАЯ = CREATE
# просто проверка чтобы не было расхождений с БД = VALIDATE

# ДЛЯ отказа от автогенерации БД - переходим на  flyway - встроен в спринг
# перед запуском первой миграции удаляем и создаем нашу БД


# для авто пробрасывания CSRF ( для  МУСТАШ )
#spring.mustache.expose-request-attributes=true
#для авто пробрасывания CSRF :
spring.freemarker.expose-request-attributes=true

# MAC
upload.path=/Users/banana/uploads

# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
#spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
# Because detection is disabled you have to set correct dialect by hand.
#spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

# PgConnection.Create Clobb
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

# MAIL properties
spring.mail.host=smtp.yandex.ru
spring.mail.username=lollipoppinger@yandex.ru
spring.mail.password=NEWTONE12binom
spring.mail.port=465
spring.mail.protocol=smtps
mail.debug=false


#
recaptcha.secret=6Le1nc4UAAAAAG4DpeONXN-70oQFP6dpbIXqpOGr
recaptcha.site=6Le1nc4UAAAAAEPjcF4qvJ9v923DlpGrXtIYhIA2

# СОХРАНЕНИЕ СЕССИИ
# значит создание таблицы с СЕССИЯМИ берет на себя Spring-session
spring.session.jdbc.initialize-schema=always
# имя таблицы
spring.session.jdbc.table-name=SPRING_SESSION

hostname=192.168.1.38